/////////////////////////////////////////////////////////////////////////////////
//                                                                             //
//                                                                             //
// RDDL MDP version of Wildlife Preserve instance #17 for IPC 2018 by Fei Fang //
// (feifang [at] cmu.edu), Thanh Hong Nguyen (thanhhng [at] umich.edu) and     //
// Thomas Keller (tho.keller [at] unibas.ch), based on the papers "When        //
// Security Games Go Green: Designing Defender Strategies to Prevent Poaching  //
// and Illegal Fishing" by Fei Fang, Peter Stone and Milind Tambe (IJCAI 2015) //
// and "Analyzing the Effectiveness of Adversary Modeling in Security Games"   //
// by Thanh H. Nguyen, Rong Yang, Amos Azaria, Sarit Kraus and Milind Tambe    //
// (AAAI 2013).                                                                //
//                                                                             //
//                                                                             //
/////////////////////////////////////////////////////////////////////////////////

instance wildlife-preserve_inst_mdp__17 {
    domain = wildlife-preserve_17_mdp;

    objects {
        ranger  : { r1, r2, r3 };
        poacher : { p1, p2, p3 };
    };

    non-fluents {
        DEFENDER-REWARD(@a1) = 0.41;
        DEFENDER-PENALTY(@a1) = -1.87;
        DEFENDER-REWARD(@a2) = 1.72;
        DEFENDER-PENALTY(@a2) = -5.19;
        DEFENDER-REWARD(@a3) = 3.21;
        DEFENDER-PENALTY(@a3) = -1.76;
        DEFENDER-REWARD(@a4) = 0.84;
        DEFENDER-PENALTY(@a4) = -0.22;
        DEFENDER-REWARD(@a5) = 0.03;
        DEFENDER-PENALTY(@a5) = -1.05;
        DEFENDER-REWARD(@a6) = 5.20;
        DEFENDER-PENALTY(@a6) = -5.76;
        DEFENDER-REWARD(@a7) = 3.62;
        DEFENDER-PENALTY(@a7) = -4.41;
        DEFENDER-REWARD(@a8) = 4.43;
        DEFENDER-PENALTY(@a8) = -4.80;
        DEFENDER-REWARD(@a9) = 2.43;
        DEFENDER-PENALTY(@a9) = -5.03;
        DEFENDER-REWARD(@a10) = 0.56;
        DEFENDER-PENALTY(@a10) = -5.19;
        DEFENDER-REWARD(@a11) = 5.50;
        DEFENDER-PENALTY(@a11) = -4.07;
        DEFENDER-REWARD(@a12) = 4.32;
        DEFENDER-PENALTY(@a12) = -5.80;
        DEFENDER-REWARD(@a13) = 0.56;
        DEFENDER-PENALTY(@a13) = -0.99;
        DEFENDER-REWARD(@a14) = 5.27;
        DEFENDER-PENALTY(@a14) = -1.58;

        // correlation between attacker reward and defender penalty as well as
        // attacker penalty and defender reward is 0.80 for all poachers and all areas

        // weights for poacher p1 are: w1 = -13.90, w2 = 0.69, w3 = 0.51
        // reward for poacher p1 in area @a1 is: 2.01
        // penalty for poacher p1 in area @a1 is: -0.73
        // reward for poacher p1 in area @a2 is: 4.86
        // penalty for poacher p1 in area @a2 is: -1.93
        // reward for poacher p1 in area @a3 is: 1.78
        // penalty for poacher p1 in area @a3 is: -3.04
        // reward for poacher p1 in area @a4 is: 0.83
        // penalty for poacher p1 in area @a4 is: -0.86
        // reward for poacher p1 in area @a5 is: 1.37
        // penalty for poacher p1 in area @a5 is: -0.66
        // reward for poacher p1 in area @a6 is: 5.34
        // penalty for poacher p1 in area @a6 is: -4.60
        // reward for poacher p1 in area @a7 is: 4.06
        // penalty for poacher p1 in area @a7 is: -3.59
        // reward for poacher p1 in area @a8 is: 3.84
        // penalty for poacher p1 in area @a8 is: -3.54
        // reward for poacher p1 in area @a9 is: 4.07
        // penalty for poacher p1 in area @a9 is: -2.32
        // reward for poacher p1 in area @a10 is: 4.45
        // penalty for poacher p1 in area @a10 is: -1.33
        // reward for poacher p1 in area @a11 is: 4.19
        // penalty for poacher p1 in area @a11 is: -5.52
        // reward for poacher p1 in area @a12 is: 5.66
        // penalty for poacher p1 in area @a12 is: -4.30
        // reward for poacher p1 in area @a13 is: 1.43
        // penalty for poacher p1 in area @a13 is: -1.56
        // reward for poacher p1 in area @a14 is: 2.01
        // penalty for poacher p1 in area @a14 is: -5.27

        // weights for poacher p2 are: w1 = -14.84, w2 = 0.81, w3 = 0.50
        // reward for poacher p2 in area @a1 is: 1.94
        // penalty for poacher p2 in area @a1 is: -0.40
        // reward for poacher p2 in area @a2 is: 4.49
        // penalty for poacher p2 in area @a2 is: -2.16
        // reward for poacher p2 in area @a3 is: 1.64
        // penalty for poacher p2 in area @a3 is: -2.62
        // reward for poacher p2 in area @a4 is: 1.04
        // penalty for poacher p2 in area @a4 is: -0.94
        // reward for poacher p2 in area @a5 is: 1.91
        // penalty for poacher p2 in area @a5 is: -0.23
        // reward for poacher p2 in area @a6 is: 5.11
        // penalty for poacher p2 in area @a6 is: -5.01
        // reward for poacher p2 in area @a7 is: 4.16
        // penalty for poacher p2 in area @a7 is: -3.90
        // reward for poacher p2 in area @a8 is: 4.05
        // penalty for poacher p2 in area @a8 is: -4.74
        // reward for poacher p2 in area @a9 is: 4.90
        // penalty for poacher p2 in area @a9 is: -2.79
        // reward for poacher p2 in area @a10 is: 5.07
        // penalty for poacher p2 in area @a10 is: -1.02
        // reward for poacher p2 in area @a11 is: 3.77
        // penalty for poacher p2 in area @a11 is: -4.63
        // reward for poacher p2 in area @a12 is: 5.62
        // penalty for poacher p2 in area @a12 is: -4.45
        // reward for poacher p2 in area @a13 is: 1.54
        // penalty for poacher p2 in area @a13 is: -0.79
        // reward for poacher p2 in area @a14 is: 1.68
        // penalty for poacher p2 in area @a14 is: -5.30

        // weights for poacher p3 are: w1 = -19.22, w2 = 0.54, w3 = 0.42
        // reward for poacher p3 in area @a1 is: 2.45
        // penalty for poacher p3 in area @a1 is: -1.33
        // reward for poacher p3 in area @a2 is: 4.56
        // penalty for poacher p3 in area @a2 is: -2.10
        // reward for poacher p3 in area @a3 is: 2.40
        // penalty for poacher p3 in area @a3 is: -3.27
        // reward for poacher p3 in area @a4 is: 1.16
        // penalty for poacher p3 in area @a4 is: -0.90
        // reward for poacher p3 in area @a5 is: 1.44
        // penalty for poacher p3 in area @a5 is: -0.65
        // reward for poacher p3 in area @a6 is: 5.56
        // penalty for poacher p3 in area @a6 is: -4.79
        // reward for poacher p3 in area @a7 is: 3.92
        // penalty for poacher p3 in area @a7 is: -3.75
        // reward for poacher p3 in area @a8 is: 4.84
        // penalty for poacher p3 in area @a8 is: -4.63
        // reward for poacher p3 in area @a9 is: 4.12
        // penalty for poacher p3 in area @a9 is: -2.69
        // reward for poacher p3 in area @a10 is: 5.07
        // penalty for poacher p3 in area @a10 is: -0.65
        // reward for poacher p3 in area @a11 is: 3.49
        // penalty for poacher p3 in area @a11 is: -4.42
        // reward for poacher p3 in area @a12 is: 5.31
        // penalty for poacher p3 in area @a12 is: -3.76
        // reward for poacher p3 in area @a13 is: 1.83
        // penalty for poacher p3 in area @a13 is: -0.59
        // reward for poacher p3 in area @a14 is: 1.34
        // penalty for poacher p3 in area @a14 is: -4.79

        ATTACK-WEIGHT_0(p1, @a1) = 2.74951;
        ATTACK-WEIGHT_1(p1, @a1) = 0.02669;
        ATTACK-WEIGHT_2(p1, @a1) = 0.00026;
        ATTACK-WEIGHT_3(p1, @a1) = 0.00000;
        ATTACK-WEIGHT_0(p1, @a2) = 10.60358;
        ATTACK-WEIGHT_1(p1, @a2) = 0.10294;
        ATTACK-WEIGHT_2(p1, @a2) = 0.00100;
        ATTACK-WEIGHT_3(p1, @a2) = 0.00001;
        ATTACK-WEIGHT_0(p1, @a3) = 0.72019;
        ATTACK-WEIGHT_1(p1, @a3) = 0.00699;
        ATTACK-WEIGHT_2(p1, @a3) = 0.00007;
        ATTACK-WEIGHT_3(p1, @a3) = 0.00000;
        ATTACK-WEIGHT_0(p1, @a4) = 1.14115;
        ATTACK-WEIGHT_1(p1, @a4) = 0.01108;
        ATTACK-WEIGHT_2(p1, @a4) = 0.00011;
        ATTACK-WEIGHT_3(p1, @a4) = 0.00000;
        ATTACK-WEIGHT_0(p1, @a5) = 1.83366;
        ATTACK-WEIGHT_1(p1, @a5) = 0.01780;
        ATTACK-WEIGHT_2(p1, @a5) = 0.00017;
        ATTACK-WEIGHT_3(p1, @a5) = 0.00000;
        ATTACK-WEIGHT_0(p1, @a6) = 3.76807;
        ATTACK-WEIGHT_1(p1, @a6) = 0.03658;
        ATTACK-WEIGHT_2(p1, @a6) = 0.00036;
        ATTACK-WEIGHT_3(p1, @a6) = 0.00000;
        ATTACK-WEIGHT_0(p1, @a7) = 2.61489;
        ATTACK-WEIGHT_1(p1, @a7) = 0.02539;
        ATTACK-WEIGHT_2(p1, @a7) = 0.00025;
        ATTACK-WEIGHT_3(p1, @a7) = 0.00000;
        ATTACK-WEIGHT_0(p1, @a8) = 2.30535;
        ATTACK-WEIGHT_1(p1, @a8) = 0.02238;
        ATTACK-WEIGHT_2(p1, @a8) = 0.00022;
        ATTACK-WEIGHT_3(p1, @a8) = 0.00000;
        ATTACK-WEIGHT_0(p1, @a9) = 5.04061;
        ATTACK-WEIGHT_1(p1, @a9) = 0.04893;
        ATTACK-WEIGHT_2(p1, @a9) = 0.00048;
        ATTACK-WEIGHT_3(p1, @a9) = 0.00000;
        ATTACK-WEIGHT_0(p1, @a10) = 10.86503;
        ATTACK-WEIGHT_1(p1, @a10) = 0.10548;
        ATTACK-WEIGHT_2(p1, @a10) = 0.00102;
        ATTACK-WEIGHT_3(p1, @a10) = 0.00001;
        ATTACK-WEIGHT_0(p1, @a11) = 1.06596;
        ATTACK-WEIGHT_1(p1, @a11) = 0.01035;
        ATTACK-WEIGHT_2(p1, @a11) = 0.00010;
        ATTACK-WEIGHT_3(p1, @a11) = 0.00000;
        ATTACK-WEIGHT_0(p1, @a12) = 5.47624;
        ATTACK-WEIGHT_1(p1, @a12) = 0.05316;
        ATTACK-WEIGHT_2(p1, @a12) = 0.00052;
        ATTACK-WEIGHT_3(p1, @a12) = 0.00001;
        ATTACK-WEIGHT_0(p1, @a13) = 1.20615;
        ATTACK-WEIGHT_1(p1, @a13) = 0.01171;
        ATTACK-WEIGHT_2(p1, @a13) = 0.00011;
        ATTACK-WEIGHT_3(p1, @a13) = 0.00000;
        ATTACK-WEIGHT_0(p1, @a14) = 0.26979;
        ATTACK-WEIGHT_1(p1, @a14) = 0.00262;
        ATTACK-WEIGHT_2(p1, @a14) = 0.00003;
        ATTACK-WEIGHT_3(p1, @a14) = 0.00000;
        ATTACK-WEIGHT_0(p2, @a1) = 3.90912;
        ATTACK-WEIGHT_1(p2, @a1) = 0.02779;
        ATTACK-WEIGHT_2(p2, @a1) = 0.00020;
        ATTACK-WEIGHT_3(p2, @a1) = 0.00000;
        ATTACK-WEIGHT_0(p2, @a2) = 12.67212;
        ATTACK-WEIGHT_1(p2, @a2) = 0.09009;
        ATTACK-WEIGHT_2(p2, @a2) = 0.00064;
        ATTACK-WEIGHT_3(p2, @a2) = 0.00000;
        ATTACK-WEIGHT_0(p2, @a3) = 1.01392;
        ATTACK-WEIGHT_1(p2, @a3) = 0.00721;
        ATTACK-WEIGHT_2(p2, @a3) = 0.00005;
        ATTACK-WEIGHT_3(p2, @a3) = 0.00000;
        ATTACK-WEIGHT_0(p2, @a4) = 1.44597;
        ATTACK-WEIGHT_1(p2, @a4) = 0.01028;
        ATTACK-WEIGHT_2(p2, @a4) = 0.00007;
        ATTACK-WEIGHT_3(p2, @a4) = 0.00000;
        ATTACK-WEIGHT_0(p2, @a5) = 4.15360;
        ATTACK-WEIGHT_1(p2, @a5) = 0.02953;
        ATTACK-WEIGHT_2(p2, @a5) = 0.00021;
        ATTACK-WEIGHT_3(p2, @a5) = 0.00000;
        ATTACK-WEIGHT_0(p2, @a6) = 5.03650;
        ATTACK-WEIGHT_1(p2, @a6) = 0.03581;
        ATTACK-WEIGHT_2(p2, @a6) = 0.00025;
        ATTACK-WEIGHT_3(p2, @a6) = 0.00000;
        ATTACK-WEIGHT_0(p2, @a7) = 4.07662;
        ATTACK-WEIGHT_1(p2, @a7) = 0.02898;
        ATTACK-WEIGHT_2(p2, @a7) = 0.00021;
        ATTACK-WEIGHT_3(p2, @a7) = 0.00000;
        ATTACK-WEIGHT_0(p2, @a8) = 2.45341;
        ATTACK-WEIGHT_1(p2, @a8) = 0.01744;
        ATTACK-WEIGHT_2(p2, @a8) = 0.00012;
        ATTACK-WEIGHT_3(p2, @a8) = 0.00000;
        ATTACK-WEIGHT_0(p2, @a9) = 12.87561;
        ATTACK-WEIGHT_1(p2, @a9) = 0.09154;
        ATTACK-WEIGHT_2(p2, @a9) = 0.00065;
        ATTACK-WEIGHT_3(p2, @a9) = 0.00000;
        ATTACK-WEIGHT_0(p2, @a10) = 35.71391;
        ATTACK-WEIGHT_1(p2, @a10) = 0.25390;
        ATTACK-WEIGHT_2(p2, @a10) = 0.00181;
        ATTACK-WEIGHT_3(p2, @a10) = 0.00001;
        ATTACK-WEIGHT_0(p2, @a11) = 2.06844;
        ATTACK-WEIGHT_1(p2, @a11) = 0.01470;
        ATTACK-WEIGHT_2(p2, @a11) = 0.00010;
        ATTACK-WEIGHT_3(p2, @a11) = 0.00000;
        ATTACK-WEIGHT_0(p2, @a12) = 10.04453;
        ATTACK-WEIGHT_1(p2, @a12) = 0.07141;
        ATTACK-WEIGHT_2(p2, @a12) = 0.00051;
        ATTACK-WEIGHT_3(p2, @a12) = 0.00000;
        ATTACK-WEIGHT_0(p2, @a13) = 2.33135;
        ATTACK-WEIGHT_1(p2, @a13) = 0.01657;
        ATTACK-WEIGHT_2(p2, @a13) = 0.00012;
        ATTACK-WEIGHT_3(p2, @a13) = 0.00000;
        ATTACK-WEIGHT_0(p2, @a14) = 0.27491;
        ATTACK-WEIGHT_1(p2, @a14) = 0.00195;
        ATTACK-WEIGHT_2(p2, @a14) = 0.00001;
        ATTACK-WEIGHT_3(p2, @a14) = 0.00000;
        ATTACK-WEIGHT_0(p3, @a1) = 2.16205;
        ATTACK-WEIGHT_1(p3, @a1) = 0.00357;
        ATTACK-WEIGHT_2(p3, @a1) = 0.00001;
        ATTACK-WEIGHT_3(p3, @a1) = 0.00000;
        ATTACK-WEIGHT_0(p3, @a2) = 4.92068;
        ATTACK-WEIGHT_1(p3, @a2) = 0.00811;
        ATTACK-WEIGHT_2(p3, @a2) = 0.00001;
        ATTACK-WEIGHT_3(p3, @a2) = 0.00000;
        ATTACK-WEIGHT_0(p3, @a3) = 0.92839;
        ATTACK-WEIGHT_1(p3, @a3) = 0.00153;
        ATTACK-WEIGHT_2(p3, @a3) = 0.00000;
        ATTACK-WEIGHT_3(p3, @a3) = 0.00000;
        ATTACK-WEIGHT_0(p3, @a4) = 1.28541;
        ATTACK-WEIGHT_1(p3, @a4) = 0.00212;
        ATTACK-WEIGHT_2(p3, @a4) = 0.00000;
        ATTACK-WEIGHT_3(p3, @a4) = 0.00000;
        ATTACK-WEIGHT_0(p3, @a5) = 1.66320;
        ATTACK-WEIGHT_1(p3, @a5) = 0.00274;
        ATTACK-WEIGHT_2(p3, @a5) = 0.00000;
        ATTACK-WEIGHT_3(p3, @a5) = 0.00000;
        ATTACK-WEIGHT_0(p3, @a6) = 2.72542;
        ATTACK-WEIGHT_1(p3, @a6) = 0.00449;
        ATTACK-WEIGHT_2(p3, @a6) = 0.00001;
        ATTACK-WEIGHT_3(p3, @a6) = 0.00000;
        ATTACK-WEIGHT_0(p3, @a7) = 1.73260;
        ATTACK-WEIGHT_1(p3, @a7) = 0.00286;
        ATTACK-WEIGHT_2(p3, @a7) = 0.00000;
        ATTACK-WEIGHT_3(p3, @a7) = 0.00000;
        ATTACK-WEIGHT_0(p3, @a8) = 1.97124;
        ATTACK-WEIGHT_1(p3, @a8) = 0.00325;
        ATTACK-WEIGHT_2(p3, @a8) = 0.00001;
        ATTACK-WEIGHT_3(p3, @a8) = 0.00000;
        ATTACK-WEIGHT_0(p3, @a9) = 3.02045;
        ATTACK-WEIGHT_1(p3, @a9) = 0.00498;
        ATTACK-WEIGHT_2(p3, @a9) = 0.00001;
        ATTACK-WEIGHT_3(p3, @a9) = 0.00000;
        ATTACK-WEIGHT_0(p3, @a10) = 11.96808;
        ATTACK-WEIGHT_1(p3, @a10) = 0.01974;
        ATTACK-WEIGHT_2(p3, @a10) = 0.00003;
        ATTACK-WEIGHT_3(p3, @a10) = 0.00000;
        ATTACK-WEIGHT_0(p3, @a11) = 1.03384;
        ATTACK-WEIGHT_1(p3, @a11) = 0.00170;
        ATTACK-WEIGHT_2(p3, @a11) = 0.00000;
        ATTACK-WEIGHT_3(p3, @a11) = 0.00000;
        ATTACK-WEIGHT_0(p3, @a12) = 3.67334;
        ATTACK-WEIGHT_1(p3, @a12) = 0.00606;
        ATTACK-WEIGHT_2(p3, @a12) = 0.00001;
        ATTACK-WEIGHT_3(p3, @a12) = 0.00000;
        ATTACK-WEIGHT_0(p3, @a13) = 2.10871;
        ATTACK-WEIGHT_1(p3, @a13) = 0.00348;
        ATTACK-WEIGHT_2(p3, @a13) = 0.00001;
        ATTACK-WEIGHT_3(p3, @a13) = 0.00000;
        ATTACK-WEIGHT_0(p3, @a14) = 0.27482;
        ATTACK-WEIGHT_1(p3, @a14) = 0.00045;
        ATTACK-WEIGHT_2(p3, @a14) = 0.00000;
        ATTACK-WEIGHT_3(p3, @a14) = 0.00000;

        POACHER-REMEMBERS(p1, @1);
        POACHER-REMEMBERS(p1, @2);
        POACHER-REMEMBERS(p1, @3);
        POACHER-REMEMBERS(p2, @1);
        POACHER-REMEMBERS(p2, @2);
        POACHER-REMEMBERS(p2, @3);
        POACHER-REMEMBERS(p3, @1);
        POACHER-REMEMBERS(p3, @2);
        POACHER-REMEMBERS(p3, @3);

    };

    init-state {
        ~was-defended(@a1,@1);
    };

    horizon = 40;

    discount = 1.0;
}